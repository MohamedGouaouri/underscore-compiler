# We'll use an id whenever we need to fill the space of an expression
# ends of if statements (elif) not detected properly (either a little too late or a little too early)

#_
 ()_ $_ f(){

    $_ x; 
    $_ i;

    {}_ P{ $_x };
    {}_ G{ $_x };

    {}_ F {''_ name, ""[]_ modules};

    $_wall;
    
    {}_ student {""_ name, $_ matricule, $_ gpa, _teacher fav};


    _student s <- f();

    s.nam <- "sity";

    $_ one;

    $_ i;

    ~_ $_ cste;


    $_ duplicate <- sumifcond;

    
}
_#

#_
()_ $_ f() {
    
}
_#

#_
()_ $_ g($_ sumifcond, $_ sumifcond1, $_ lastresortsum){

    ""_ name;
    $[]_ array;

    arry[1] <- 0;

    $_ thatMethod;

    loop(cond) {
        sum <- someMethod();
        student.sum <- 20;
        ? (cond1) {
            #break;
        }
        : () {
            #continue;
        }
    }

    READ(u);

    #thatMethod(sum, difference);

    thatOtherMethod(;

    -> sum ;
    #break; ## Syntax error normally

}


()_ thatMothod($_ s, $_ d) {

    READ(s);

    WRITE(s);

    s <- s;

    -> d;

}

#_
()_ thatMothod() {

    x <- 10;
    y <- 20;
    ? (10){
        x <- 10;
        x <- 10;
    }
    -> 100;
   
}
_#

()_ f(){
    ""_ x<-"hello";    
    ""_ t<-("hello");

    $_ y<-500+50;
    $_ z<-50;

    ?_ h<-true && false;

    $[]_ modules;

    modules[5]<-2;

    ? (10>=5){
        x <- 10;
    }
}

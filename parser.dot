// Generated by GNU Bison 3.6.4.
// Report bugs to <bug-bison@gnu.org>.
// Home page: <https://www.gnu.org/software/bison/>.

digraph "parser.y"
{
  node [fontname = courier, shape = box, colorscheme = paired6]
  edge [fontname = courier]

  0 [label="State 0\n\l  0 $accept: . underscore $end\l"]
  0 -> 1 [style=dashed label="underscore"]
  0 -> "0R1" [style=solid]
 "0R1" [label="R1", fillcolor=3, shape=diamond, style=filled]
  1 [label="State 1\n\l  0 $accept: underscore . $end\l  2 underscore: underscore . func\l"]
  1 -> 2 [style=solid label="$end"]
  1 -> 3 [style=solid label="FUNCTIONDECLARE"]
  1 -> 4 [style=dashed label="func"]
  2 [label="State 2\n\l  0 $accept: underscore $end .\l"]
  2 -> "2R0" [style=solid]
 "2R0" [label="Acc", fillcolor=1, shape=diamond, style=filled]
  3 [label="State 3\n\l  3 func: FUNCTIONDECLARE . ret ID \"(\" params_eps \")\" body\l"]
  3 -> 5 [style=solid label="NUMBERDECLARE"]
  3 -> 6 [style=solid label="STRINGDECLARE"]
  3 -> 7 [style=solid label="BOOLEENDECLARE"]
  3 -> 8 [style=solid label="STRUCTTYPEDECLARE"]
  3 -> 9 [style=solid label="TABLEDECLARE"]
  3 -> 10 [style=dashed label="ret"]
  3 -> 11 [style=dashed label="srt"]
  3 -> 12 [style=dashed label="crt"]
  3 -> "3R4" [style=solid]
 "3R4" [label="R4", fillcolor=3, shape=diamond, style=filled]
  4 [label="State 4\n\l  2 underscore: underscore func .\l"]
  4 -> "4R2" [style=solid]
 "4R2" [label="R2", fillcolor=3, shape=diamond, style=filled]
  5 [label="State 5\n\l  7 srt: NUMBERDECLARE .\l"]
  5 -> "5R7" [style=solid]
 "5R7" [label="R7", fillcolor=3, shape=diamond, style=filled]
  6 [label="State 6\n\l  8 srt: STRINGDECLARE .\l"]
  6 -> "6R8" [style=solid]
 "6R8" [label="R8", fillcolor=3, shape=diamond, style=filled]
  7 [label="State 7\n\l  9 srt: BOOLEENDECLARE .\l"]
  7 -> "7R9" [style=solid]
 "7R9" [label="R9", fillcolor=3, shape=diamond, style=filled]
  8 [label="State 8\n\l 11 crt: STRUCTTYPEDECLARE .\l"]
  8 -> "8R11" [style=solid]
 "8R11" [label="R11", fillcolor=3, shape=diamond, style=filled]
  9 [label="State 9\n\l 10 crt: TABLEDECLARE .\l"]
  9 -> "9R10" [style=solid]
 "9R10" [label="R10", fillcolor=3, shape=diamond, style=filled]
  10 [label="State 10\n\l  3 func: FUNCTIONDECLARE ret . ID \"(\" params_eps \")\" body\l"]
  10 -> 13 [style=solid label="ID"]
  11 [label="State 11\n\l  5 ret: srt .\l"]
  11 -> "11R5" [style=solid]
 "11R5" [label="R5", fillcolor=3, shape=diamond, style=filled]
  12 [label="State 12\n\l  6 ret: crt .\l"]
  12 -> "12R6" [style=solid]
 "12R6" [label="R6", fillcolor=3, shape=diamond, style=filled]
  13 [label="State 13\n\l  3 func: FUNCTIONDECLARE ret ID . \"(\" params_eps \")\" body\l"]
  13 -> 14 [style=solid label="\"(\""]
  14 [label="State 14\n\l  3 func: FUNCTIONDECLARE ret ID \"(\" . params_eps \")\" body\l"]
  14 -> 5 [style=solid label="NUMBERDECLARE"]
  14 -> 6 [style=solid label="STRINGDECLARE"]
  14 -> 7 [style=solid label="BOOLEENDECLARE"]
  14 -> 8 [style=solid label="STRUCTTYPEDECLARE"]
  14 -> 9 [style=solid label="TABLEDECLARE"]
  14 -> 15 [style=dashed label="srt"]
  14 -> 16 [style=dashed label="crt"]
  14 -> 17 [style=dashed label="params_eps"]
  14 -> 18 [style=dashed label="params"]
  14 -> 19 [style=dashed label="param"]
  14 -> 20 [style=dashed label="type"]
  14 -> "14R12" [style=solid]
 "14R12" [label="R12", fillcolor=3, shape=diamond, style=filled]
  15 [label="State 15\n\l 18 type: srt .\l"]
  15 -> "15R18" [style=solid]
 "15R18" [label="R18", fillcolor=3, shape=diamond, style=filled]
  16 [label="State 16\n\l 19 type: crt .\l"]
  16 -> "16R19" [style=solid]
 "16R19" [label="R19", fillcolor=3, shape=diamond, style=filled]
  17 [label="State 17\n\l  3 func: FUNCTIONDECLARE ret ID \"(\" params_eps . \")\" body\l"]
  17 -> 21 [style=solid label="\")\""]
  18 [label="State 18\n\l 13 params_eps: params .\l"]
  18 -> "18R13" [style=solid]
 "18R13" [label="R13", fillcolor=3, shape=diamond, style=filled]
  19 [label="State 19\n\l 14 params: param . comma_params\l"]
  19 -> 22 [style=solid label="\",\""]
  19 -> 23 [style=dashed label="comma_params"]
  19 -> "19R15" [style=solid]
 "19R15" [label="R15", fillcolor=3, shape=diamond, style=filled]
  20 [label="State 20\n\l 17 param: type . ID\l"]
  20 -> 24 [style=solid label="ID"]
  21 [label="State 21\n\l  3 func: FUNCTIONDECLARE ret ID \"(\" params_eps \")\" . body\l"]
  21 -> 25 [style=solid label="\"{\""]
  21 -> 26 [style=dashed label="body"]
  22 [label="State 22\n\l 16 comma_params: \",\" . params\l"]
  22 -> 5 [style=solid label="NUMBERDECLARE"]
  22 -> 6 [style=solid label="STRINGDECLARE"]
  22 -> 7 [style=solid label="BOOLEENDECLARE"]
  22 -> 8 [style=solid label="STRUCTTYPEDECLARE"]
  22 -> 9 [style=solid label="TABLEDECLARE"]
  22 -> 15 [style=dashed label="srt"]
  22 -> 16 [style=dashed label="crt"]
  22 -> 27 [style=dashed label="params"]
  22 -> 19 [style=dashed label="param"]
  22 -> 20 [style=dashed label="type"]
  23 [label="State 23\n\l 14 params: param comma_params .\l"]
  23 -> "23R14" [style=solid]
 "23R14" [label="R14", fillcolor=3, shape=diamond, style=filled]
  24 [label="State 24\n\l 17 param: type ID .\l"]
  24 -> "24R17" [style=solid]
 "24R17" [label="R17", fillcolor=3, shape=diamond, style=filled]
  25 [label="State 25\n\l 20 body: \"{\" . bloc \"}\"\l"]
  25 -> 28 [style=solid label="LOOP"]
  25 -> 29 [style=solid label="IF"]
  25 -> 30 [style=solid label="READ"]
  25 -> 31 [style=solid label="WRITE"]
  25 -> 32 [style=solid label="ID"]
  25 -> 33 [style=solid label="NUMBERDECLARE"]
  25 -> 34 [style=solid label="STRINGDECLARE"]
  25 -> 35 [style=solid label="CONSTDECLARE"]
  25 -> 36 [style=solid label="BOOLEENDECLARE"]
  25 -> 37 [style=solid label="STRUCTTYPEDECLARE"]
  25 -> 38 [style=solid label="STRUCTDECLARE"]
  25 -> 39 [style=solid label="TABLEDECLARE"]
  25 -> 40 [style=solid label="POINTERDECLARE"]
  25 -> 41 [style=solid label="\"&\""]
  25 -> 42 [style=solid label="\"@\""]
  25 -> 43 [style=solid label="RETURN"]
  25 -> 44 [style=dashed label="bloc"]
  25 -> 45 [style=dashed label="statement"]
  25 -> 46 [style=dashed label="type_declare"]
  25 -> 47 [style=dashed label="just_declare"]
  25 -> 48 [style=dashed label="init_declare"]
  25 -> 49 [style=dashed label="declare"]
  25 -> 50 [style=dashed label="assign"]
  25 -> 51 [style=dashed label="ifstmt"]
  25 -> 52 [style=dashed label="var"]
  25 -> "25R22" [style=solid]
 "25R22" [label="R22", fillcolor=3, shape=diamond, style=filled]
  26 [label="State 26\n\l  3 func: FUNCTIONDECLARE ret ID \"(\" params_eps \")\" body .\l"]
  26 -> "26R3" [style=solid]
 "26R3" [label="R3", fillcolor=3, shape=diamond, style=filled]
  27 [label="State 27\n\l 16 comma_params: \",\" params .\l"]
  27 -> "27R16" [style=solid]
 "27R16" [label="R16", fillcolor=3, shape=diamond, style=filled]
  28 [label="State 28\n\l 26 statement: LOOP . \"(\" expression \")\" \"{\" loop_bloc \"}\"\l 27          | LOOP . \"(\" assign \";\" expression \";\" assign \")\" \"{\" loop_bloc \"}\"\l 28          | LOOP . \"(\" init_declare \";\" expression \";\" assign \")\" \"{\" loop_bloc \"}\"\l"]
  28 -> 53 [style=solid label="\"(\""]
  29 [label="State 29\n\l 61 ifstmt: IF . \"(\" expression \")\" body\l"]
  29 -> 54 [style=solid label="\"(\""]
  30 [label="State 30\n\l 36 statement: READ . \"(\" ID \")\" \";\"\l"]
  30 -> 55 [style=solid label="\"(\""]
  31 [label="State 31\n\l 37 statement: WRITE . \"(\" expression \")\" \";\"\l"]
  31 -> 56 [style=solid label="\"(\""]
  32 [label="State 32\n\l 34 statement: ID . \"(\" \")\" \";\"\l 35          | ID . \"(\" call_param \")\" \";\"\l 58 assign: ID . \"[\" expression \"]\" ASSIGNMENT expression\l 69 var: ID .\l 70    | ID . \".\" accessfield\l"]
  32 -> 57 [style=solid label="\"(\""]
  32 -> 58 [style=solid label="\"[\""]
  32 -> 59 [style=solid label="\".\""]
  32 -> "32R69" [style=solid]
 "32R69" [label="R69", fillcolor=3, shape=diamond, style=filled]
  33 [label="State 33\n\l 42 type_declare: NUMBERDECLARE .\l"]
  33 -> "33R42" [style=solid]
 "33R42" [label="R42", fillcolor=3, shape=diamond, style=filled]
  34 [label="State 34\n\l 43 type_declare: STRINGDECLARE .\l"]
  34 -> "34R43" [style=solid]
 "34R43" [label="R43", fillcolor=3, shape=diamond, style=filled]
  35 [label="State 35\n\l 44 type_declare: CONSTDECLARE . NUMBERDECLARE\l 45             | CONSTDECLARE . STRINGDECLARE\l"]
  35 -> 60 [style=solid label="NUMBERDECLARE"]
  35 -> 61 [style=solid label="STRINGDECLARE"]
  36 [label="State 36\n\l 46 type_declare: BOOLEENDECLARE .\l"]
  36 -> "36R46" [style=solid]
 "36R46" [label="R46", fillcolor=3, shape=diamond, style=filled]
  37 [label="State 37\n\l 24 statement: STRUCTTYPEDECLARE . ID \"{\" struct_fields \"}\" \";\"\l"]
  37 -> 62 [style=solid label="ID"]
  38 [label="State 38\n\l 49 type_declare: STRUCTDECLARE .\l"]
  38 -> "38R49" [style=solid]
 "38R49" [label="R49", fillcolor=3, shape=diamond, style=filled]
  39 [label="State 39\n\l 48 type_declare: TABLEDECLARE .\l"]
  39 -> "39R48" [style=solid]
 "39R48" [label="R48", fillcolor=3, shape=diamond, style=filled]
  40 [label="State 40\n\l 47 type_declare: POINTERDECLARE .\l"]
  40 -> "40R47" [style=solid]
 "40R47" [label="R47", fillcolor=3, shape=diamond, style=filled]
  41 [label="State 41\n\l 59 assign: \"&\" . var ASSIGNMENT expression\l"]
  41 -> 63 [style=solid label="ID"]
  41 -> 64 [style=dashed label="var"]
  42 [label="State 42\n\l 60 assign: \"@\" . var ASSIGNMENT expression\l"]
  42 -> 63 [style=solid label="ID"]
  42 -> 65 [style=dashed label="var"]
  43 [label="State 43\n\l 33 statement: RETURN . expression \";\"\l"]
  43 -> 66 [style=solid label="ID"]
  43 -> 67 [style=solid label="INTEGER"]
  43 -> 68 [style=dashed label="expression"]
  44 [label="State 44\n\l 20 body: \"{\" bloc . \"}\"\l"]
  44 -> 69 [style=solid label="\"}\""]
  45 [label="State 45\n\l 21 bloc: statement . bloc\l"]
  45 -> 28 [style=solid label="LOOP"]
  45 -> 29 [style=solid label="IF"]
  45 -> 30 [style=solid label="READ"]
  45 -> 31 [style=solid label="WRITE"]
  45 -> 32 [style=solid label="ID"]
  45 -> 33 [style=solid label="NUMBERDECLARE"]
  45 -> 34 [style=solid label="STRINGDECLARE"]
  45 -> 35 [style=solid label="CONSTDECLARE"]
  45 -> 36 [style=solid label="BOOLEENDECLARE"]
  45 -> 37 [style=solid label="STRUCTTYPEDECLARE"]
  45 -> 38 [style=solid label="STRUCTDECLARE"]
  45 -> 39 [style=solid label="TABLEDECLARE"]
  45 -> 40 [style=solid label="POINTERDECLARE"]
  45 -> 41 [style=solid label="\"&\""]
  45 -> 42 [style=solid label="\"@\""]
  45 -> 43 [style=solid label="RETURN"]
  45 -> 70 [style=dashed label="bloc"]
  45 -> 45 [style=dashed label="statement"]
  45 -> 46 [style=dashed label="type_declare"]
  45 -> 47 [style=dashed label="just_declare"]
  45 -> 48 [style=dashed label="init_declare"]
  45 -> 49 [style=dashed label="declare"]
  45 -> 50 [style=dashed label="assign"]
  45 -> 51 [style=dashed label="ifstmt"]
  45 -> 52 [style=dashed label="var"]
  45 -> "45R22" [style=solid]
 "45R22" [label="R22", fillcolor=3, shape=diamond, style=filled]
  46 [label="State 46\n\l 50 just_declare: type_declare . ID\l"]
  46 -> 71 [style=solid label="ID"]
  47 [label="State 47\n\l 51 init_declare: just_declare . ASSIGNMENT expression\l 52 declare: just_declare .\l"]
  47 -> 72 [style=solid label="ASSIGNMENT"]
  47 -> "47R52" [style=solid]
 "47R52" [label="R52", fillcolor=3, shape=diamond, style=filled]
  48 [label="State 48\n\l 53 declare: init_declare .\l"]
  48 -> "48R53" [style=solid]
 "48R53" [label="R53", fillcolor=3, shape=diamond, style=filled]
  49 [label="State 49\n\l 23 statement: declare . \";\"\l"]
  49 -> 73 [style=solid label="\";\""]
  50 [label="State 50\n\l 25 statement: assign . \";\"\l"]
  50 -> 74 [style=solid label="\";\""]
  51 [label="State 51\n\l 29 statement: ifstmt .\l 30          | ifstmt . elsestmt\l 31          | ifstmt . elifstmt\l 32          | ifstmt . elifstmt elsestmt\l"]
  51 -> 75 [style=solid label="ELSE"]
  51 -> 76 [style=dashed label="elifstmt"]
  51 -> 77 [style=dashed label="elsestmt"]
  51 -> "51R29" [style=solid]
 "51R29" [label="R29", fillcolor=3, shape=diamond, style=filled]
  52 [label="State 52\n\l 57 assign: var . ASSIGNMENT expression\l"]
  52 -> 78 [style=solid label="ASSIGNMENT"]
  53 [label="State 53\n\l 26 statement: LOOP \"(\" . expression \")\" \"{\" loop_bloc \"}\"\l 27          | LOOP \"(\" . assign \";\" expression \";\" assign \")\" \"{\" loop_bloc \"}\"\l 28          | LOOP \"(\" . init_declare \";\" expression \";\" assign \")\" \"{\" loop_bloc \"}\"\l"]
  53 -> 79 [style=solid label="ID"]
  53 -> 33 [style=solid label="NUMBERDECLARE"]
  53 -> 34 [style=solid label="STRINGDECLARE"]
  53 -> 35 [style=solid label="CONSTDECLARE"]
  53 -> 36 [style=solid label="BOOLEENDECLARE"]
  53 -> 38 [style=solid label="STRUCTDECLARE"]
  53 -> 39 [style=solid label="TABLEDECLARE"]
  53 -> 40 [style=solid label="POINTERDECLARE"]
  53 -> 41 [style=solid label="\"&\""]
  53 -> 42 [style=solid label="\"@\""]
  53 -> 67 [style=solid label="INTEGER"]
  53 -> 46 [style=dashed label="type_declare"]
  53 -> 80 [style=dashed label="just_declare"]
  53 -> 81 [style=dashed label="init_declare"]
  53 -> 82 [style=dashed label="assign"]
  53 -> 52 [style=dashed label="var"]
  53 -> 83 [style=dashed label="expression"]
  54 [label="State 54\n\l 61 ifstmt: IF \"(\" . expression \")\" body\l"]
  54 -> 66 [style=solid label="ID"]
  54 -> 67 [style=solid label="INTEGER"]
  54 -> 84 [style=dashed label="expression"]
  55 [label="State 55\n\l 36 statement: READ \"(\" . ID \")\" \";\"\l"]
  55 -> 85 [style=solid label="ID"]
  56 [label="State 56\n\l 37 statement: WRITE \"(\" . expression \")\" \";\"\l"]
  56 -> 66 [style=solid label="ID"]
  56 -> 67 [style=solid label="INTEGER"]
  56 -> 86 [style=dashed label="expression"]
  57 [label="State 57\n\l 34 statement: ID \"(\" . \")\" \";\"\l 35          | ID \"(\" . call_param \")\" \";\"\l"]
  57 -> 66 [style=solid label="ID"]
  57 -> 87 [style=solid label="\")\""]
  57 -> 67 [style=solid label="INTEGER"]
  57 -> 88 [style=dashed label="call_param"]
  57 -> 89 [style=dashed label="expression"]
  58 [label="State 58\n\l 58 assign: ID \"[\" . expression \"]\" ASSIGNMENT expression\l"]
  58 -> 66 [style=solid label="ID"]
  58 -> 67 [style=solid label="INTEGER"]
  58 -> 90 [style=dashed label="expression"]
  59 [label="State 59\n\l 70 var: ID \".\" . accessfield\l"]
  59 -> 91 [style=solid label="ID"]
  59 -> 92 [style=dashed label="accessfield"]
  60 [label="State 60\n\l 44 type_declare: CONSTDECLARE NUMBERDECLARE .\l"]
  60 -> "60R44" [style=solid]
 "60R44" [label="R44", fillcolor=3, shape=diamond, style=filled]
  61 [label="State 61\n\l 45 type_declare: CONSTDECLARE STRINGDECLARE .\l"]
  61 -> "61R45" [style=solid]
 "61R45" [label="R45", fillcolor=3, shape=diamond, style=filled]
  62 [label="State 62\n\l 24 statement: STRUCTTYPEDECLARE ID . \"{\" struct_fields \"}\" \";\"\l"]
  62 -> 93 [style=solid label="\"{\""]
  63 [label="State 63\n\l 69 var: ID .\l 70    | ID . \".\" accessfield\l"]
  63 -> 59 [style=solid label="\".\""]
  63 -> "63R69" [style=solid]
 "63R69" [label="R69", fillcolor=3, shape=diamond, style=filled]
  64 [label="State 64\n\l 59 assign: \"&\" var . ASSIGNMENT expression\l"]
  64 -> 94 [style=solid label="ASSIGNMENT"]
  65 [label="State 65\n\l 60 assign: \"@\" var . ASSIGNMENT expression\l"]
  65 -> 95 [style=solid label="ASSIGNMENT"]
  66 [label="State 66\n\l 71 expression: ID .\l"]
  66 -> "66R71" [style=solid]
 "66R71" [label="R71", fillcolor=3, shape=diamond, style=filled]
  67 [label="State 67\n\l 72 expression: INTEGER .\l"]
  67 -> "67R72" [style=solid]
 "67R72" [label="R72", fillcolor=3, shape=diamond, style=filled]
  68 [label="State 68\n\l 33 statement: RETURN expression . \";\"\l"]
  68 -> 96 [style=solid label="\";\""]
  69 [label="State 69\n\l 20 body: \"{\" bloc \"}\" .\l"]
  69 -> "69R20" [style=solid]
 "69R20" [label="R20", fillcolor=3, shape=diamond, style=filled]
  70 [label="State 70\n\l 21 bloc: statement bloc .\l"]
  70 -> "70R21" [style=solid]
 "70R21" [label="R21", fillcolor=3, shape=diamond, style=filled]
  71 [label="State 71\n\l 50 just_declare: type_declare ID .\l"]
  71 -> "71R50" [style=solid]
 "71R50" [label="R50", fillcolor=3, shape=diamond, style=filled]
  72 [label="State 72\n\l 51 init_declare: just_declare ASSIGNMENT . expression\l"]
  72 -> 66 [style=solid label="ID"]
  72 -> 67 [style=solid label="INTEGER"]
  72 -> 97 [style=dashed label="expression"]
  73 [label="State 73\n\l 23 statement: declare \";\" .\l"]
  73 -> "73R23" [style=solid]
 "73R23" [label="R23", fillcolor=3, shape=diamond, style=filled]
  74 [label="State 74\n\l 25 statement: assign \";\" .\l"]
  74 -> "74R25" [style=solid]
 "74R25" [label="R25", fillcolor=3, shape=diamond, style=filled]
  75 [label="State 75\n\l 62 elifstmt: ELSE . \"(\" expression \")\" body\l 64 elsestmt: ELSE . \"(\" \")\" body\l"]
  75 -> 98 [style=solid label="\"(\""]
  76 [label="State 76\n\l 31 statement: ifstmt elifstmt .\l 32          | ifstmt elifstmt . elsestmt\l 63 elifstmt: elifstmt . ELSE \"(\" expression \")\" body\l"]
  76 -> 99 [style=solid label="ELSE"]
  76 -> 100 [style=dashed label="elsestmt"]
  76 -> "76R31" [style=solid]
 "76R31" [label="R31", fillcolor=3, shape=diamond, style=filled]
  77 [label="State 77\n\l 30 statement: ifstmt elsestmt .\l"]
  77 -> "77R30" [style=solid]
 "77R30" [label="R30", fillcolor=3, shape=diamond, style=filled]
  78 [label="State 78\n\l 57 assign: var ASSIGNMENT . expression\l"]
  78 -> 66 [style=solid label="ID"]
  78 -> 67 [style=solid label="INTEGER"]
  78 -> 101 [style=dashed label="expression"]
  79 [label="State 79\n\l 58 assign: ID . \"[\" expression \"]\" ASSIGNMENT expression\l 69 var: ID .\l 70    | ID . \".\" accessfield\l 71 expression: ID .\l"]
  79 -> 58 [style=solid label="\"[\""]
  79 -> 59 [style=solid label="\".\""]
  79 -> "79R69" [style=solid]
 "79R69" [label="R69", fillcolor=3, shape=diamond, style=filled]
  79 -> "79R71" [label="[\")\"]", style=solid]
 "79R71" [label="R71", fillcolor=3, shape=diamond, style=filled]
  80 [label="State 80\n\l 51 init_declare: just_declare . ASSIGNMENT expression\l"]
  80 -> 72 [style=solid label="ASSIGNMENT"]
  81 [label="State 81\n\l 28 statement: LOOP \"(\" init_declare . \";\" expression \";\" assign \")\" \"{\" loop_bloc \"}\"\l"]
  81 -> 102 [style=solid label="\";\""]
  82 [label="State 82\n\l 27 statement: LOOP \"(\" assign . \";\" expression \";\" assign \")\" \"{\" loop_bloc \"}\"\l"]
  82 -> 103 [style=solid label="\";\""]
  83 [label="State 83\n\l 26 statement: LOOP \"(\" expression . \")\" \"{\" loop_bloc \"}\"\l"]
  83 -> 104 [style=solid label="\")\""]
  84 [label="State 84\n\l 61 ifstmt: IF \"(\" expression . \")\" body\l"]
  84 -> 105 [style=solid label="\")\""]
  85 [label="State 85\n\l 36 statement: READ \"(\" ID . \")\" \";\"\l"]
  85 -> 106 [style=solid label="\")\""]
  86 [label="State 86\n\l 37 statement: WRITE \"(\" expression . \")\" \";\"\l"]
  86 -> 107 [style=solid label="\")\""]
  87 [label="State 87\n\l 34 statement: ID \"(\" \")\" . \";\"\l"]
  87 -> 108 [style=solid label="\";\""]
  88 [label="State 88\n\l 35 statement: ID \"(\" call_param . \")\" \";\"\l"]
  88 -> 109 [style=solid label="\")\""]
  89 [label="State 89\n\l 65 call_param: expression .\l 66           | expression . \",\" call_param\l"]
  89 -> 110 [style=solid label="\",\""]
  89 -> "89R65" [style=solid]
 "89R65" [label="R65", fillcolor=3, shape=diamond, style=filled]
  90 [label="State 90\n\l 58 assign: ID \"[\" expression . \"]\" ASSIGNMENT expression\l"]
  90 -> 111 [style=solid label="\"]\""]
  91 [label="State 91\n\l 67 accessfield: ID .\l 68            | ID . \".\" accessfield\l"]
  91 -> 112 [style=solid label="\".\""]
  91 -> "91R67" [style=solid]
 "91R67" [label="R67", fillcolor=3, shape=diamond, style=filled]
  92 [label="State 92\n\l 70 var: ID \".\" accessfield .\l"]
  92 -> "92R70" [style=solid]
 "92R70" [label="R70", fillcolor=3, shape=diamond, style=filled]
  93 [label="State 93\n\l 24 statement: STRUCTTYPEDECLARE ID \"{\" . struct_fields \"}\" \";\"\l"]
  93 -> 33 [style=solid label="NUMBERDECLARE"]
  93 -> 34 [style=solid label="STRINGDECLARE"]
  93 -> 35 [style=solid label="CONSTDECLARE"]
  93 -> 36 [style=solid label="BOOLEENDECLARE"]
  93 -> 38 [style=solid label="STRUCTDECLARE"]
  93 -> 39 [style=solid label="TABLEDECLARE"]
  93 -> 40 [style=solid label="POINTERDECLARE"]
  93 -> 46 [style=dashed label="type_declare"]
  93 -> 47 [style=dashed label="just_declare"]
  93 -> 48 [style=dashed label="init_declare"]
  93 -> 113 [style=dashed label="declare"]
  93 -> 114 [style=dashed label="struct_fields"]
  93 -> "93R56" [style=solid]
 "93R56" [label="R56", fillcolor=3, shape=diamond, style=filled]
  94 [label="State 94\n\l 59 assign: \"&\" var ASSIGNMENT . expression\l"]
  94 -> 66 [style=solid label="ID"]
  94 -> 67 [style=solid label="INTEGER"]
  94 -> 115 [style=dashed label="expression"]
  95 [label="State 95\n\l 60 assign: \"@\" var ASSIGNMENT . expression\l"]
  95 -> 66 [style=solid label="ID"]
  95 -> 67 [style=solid label="INTEGER"]
  95 -> 116 [style=dashed label="expression"]
  96 [label="State 96\n\l 33 statement: RETURN expression \";\" .\l"]
  96 -> "96R33" [style=solid]
 "96R33" [label="R33", fillcolor=3, shape=diamond, style=filled]
  97 [label="State 97\n\l 51 init_declare: just_declare ASSIGNMENT expression .\l"]
  97 -> "97R51" [style=solid]
 "97R51" [label="R51", fillcolor=3, shape=diamond, style=filled]
  98 [label="State 98\n\l 62 elifstmt: ELSE \"(\" . expression \")\" body\l 64 elsestmt: ELSE \"(\" . \")\" body\l"]
  98 -> 66 [style=solid label="ID"]
  98 -> 117 [style=solid label="\")\""]
  98 -> 67 [style=solid label="INTEGER"]
  98 -> 118 [style=dashed label="expression"]
  99 [label="State 99\n\l 63 elifstmt: elifstmt ELSE . \"(\" expression \")\" body\l 64 elsestmt: ELSE . \"(\" \")\" body\l"]
  99 -> 119 [style=solid label="\"(\""]
  100 [label="State 100\n\l 32 statement: ifstmt elifstmt elsestmt .\l"]
  100 -> "100R32" [style=solid]
 "100R32" [label="R32", fillcolor=3, shape=diamond, style=filled]
  101 [label="State 101\n\l 57 assign: var ASSIGNMENT expression .\l"]
  101 -> "101R57" [style=solid]
 "101R57" [label="R57", fillcolor=3, shape=diamond, style=filled]
  102 [label="State 102\n\l 28 statement: LOOP \"(\" init_declare \";\" . expression \";\" assign \")\" \"{\" loop_bloc \"}\"\l"]
  102 -> 66 [style=solid label="ID"]
  102 -> 67 [style=solid label="INTEGER"]
  102 -> 120 [style=dashed label="expression"]
  103 [label="State 103\n\l 27 statement: LOOP \"(\" assign \";\" . expression \";\" assign \")\" \"{\" loop_bloc \"}\"\l"]
  103 -> 66 [style=solid label="ID"]
  103 -> 67 [style=solid label="INTEGER"]
  103 -> 121 [style=dashed label="expression"]
  104 [label="State 104\n\l 26 statement: LOOP \"(\" expression \")\" . \"{\" loop_bloc \"}\"\l"]
  104 -> 122 [style=solid label="\"{\""]
  105 [label="State 105\n\l 61 ifstmt: IF \"(\" expression \")\" . body\l"]
  105 -> 25 [style=solid label="\"{\""]
  105 -> 123 [style=dashed label="body"]
  106 [label="State 106\n\l 36 statement: READ \"(\" ID \")\" . \";\"\l"]
  106 -> 124 [style=solid label="\";\""]
  107 [label="State 107\n\l 37 statement: WRITE \"(\" expression \")\" . \";\"\l"]
  107 -> 125 [style=solid label="\";\""]
  108 [label="State 108\n\l 34 statement: ID \"(\" \")\" \";\" .\l"]
  108 -> "108R34" [style=solid]
 "108R34" [label="R34", fillcolor=3, shape=diamond, style=filled]
  109 [label="State 109\n\l 35 statement: ID \"(\" call_param \")\" . \";\"\l"]
  109 -> 126 [style=solid label="\";\""]
  110 [label="State 110\n\l 66 call_param: expression \",\" . call_param\l"]
  110 -> 66 [style=solid label="ID"]
  110 -> 67 [style=solid label="INTEGER"]
  110 -> 127 [style=dashed label="call_param"]
  110 -> 89 [style=dashed label="expression"]
  111 [label="State 111\n\l 58 assign: ID \"[\" expression \"]\" . ASSIGNMENT expression\l"]
  111 -> 128 [style=solid label="ASSIGNMENT"]
  112 [label="State 112\n\l 68 accessfield: ID \".\" . accessfield\l"]
  112 -> 91 [style=solid label="ID"]
  112 -> 129 [style=dashed label="accessfield"]
  113 [label="State 113\n\l 54 struct_fields: declare .\l 55              | declare . \",\" struct_fields\l"]
  113 -> 130 [style=solid label="\",\""]
  113 -> "113R54" [style=solid]
 "113R54" [label="R54", fillcolor=3, shape=diamond, style=filled]
  114 [label="State 114\n\l 24 statement: STRUCTTYPEDECLARE ID \"{\" struct_fields . \"}\" \";\"\l"]
  114 -> 131 [style=solid label="\"}\""]
  115 [label="State 115\n\l 59 assign: \"&\" var ASSIGNMENT expression .\l"]
  115 -> "115R59" [style=solid]
 "115R59" [label="R59", fillcolor=3, shape=diamond, style=filled]
  116 [label="State 116\n\l 60 assign: \"@\" var ASSIGNMENT expression .\l"]
  116 -> "116R60" [style=solid]
 "116R60" [label="R60", fillcolor=3, shape=diamond, style=filled]
  117 [label="State 117\n\l 64 elsestmt: ELSE \"(\" \")\" . body\l"]
  117 -> 25 [style=solid label="\"{\""]
  117 -> 132 [style=dashed label="body"]
  118 [label="State 118\n\l 62 elifstmt: ELSE \"(\" expression . \")\" body\l"]
  118 -> 133 [style=solid label="\")\""]
  119 [label="State 119\n\l 63 elifstmt: elifstmt ELSE \"(\" . expression \")\" body\l 64 elsestmt: ELSE \"(\" . \")\" body\l"]
  119 -> 66 [style=solid label="ID"]
  119 -> 117 [style=solid label="\")\""]
  119 -> 67 [style=solid label="INTEGER"]
  119 -> 134 [style=dashed label="expression"]
  120 [label="State 120\n\l 28 statement: LOOP \"(\" init_declare \";\" expression . \";\" assign \")\" \"{\" loop_bloc \"}\"\l"]
  120 -> 135 [style=solid label="\";\""]
  121 [label="State 121\n\l 27 statement: LOOP \"(\" assign \";\" expression . \";\" assign \")\" \"{\" loop_bloc \"}\"\l"]
  121 -> 136 [style=solid label="\";\""]
  122 [label="State 122\n\l 26 statement: LOOP \"(\" expression \")\" \"{\" . loop_bloc \"}\"\l"]
  122 -> 28 [style=solid label="LOOP"]
  122 -> 29 [style=solid label="IF"]
  122 -> 30 [style=solid label="READ"]
  122 -> 31 [style=solid label="WRITE"]
  122 -> 32 [style=solid label="ID"]
  122 -> 33 [style=solid label="NUMBERDECLARE"]
  122 -> 34 [style=solid label="STRINGDECLARE"]
  122 -> 35 [style=solid label="CONSTDECLARE"]
  122 -> 36 [style=solid label="BOOLEENDECLARE"]
  122 -> 37 [style=solid label="STRUCTTYPEDECLARE"]
  122 -> 38 [style=solid label="STRUCTDECLARE"]
  122 -> 39 [style=solid label="TABLEDECLARE"]
  122 -> 40 [style=solid label="POINTERDECLARE"]
  122 -> 41 [style=solid label="\"&\""]
  122 -> 42 [style=solid label="\"@\""]
  122 -> 43 [style=solid label="RETURN"]
  122 -> 137 [style=dashed label="statement"]
  122 -> 138 [style=dashed label="loop_bloc"]
  122 -> 46 [style=dashed label="type_declare"]
  122 -> 47 [style=dashed label="just_declare"]
  122 -> 48 [style=dashed label="init_declare"]
  122 -> 49 [style=dashed label="declare"]
  122 -> 50 [style=dashed label="assign"]
  122 -> 51 [style=dashed label="ifstmt"]
  122 -> 52 [style=dashed label="var"]
  122 -> "122R41" [style=solid]
 "122R41" [label="R41", fillcolor=3, shape=diamond, style=filled]
  123 [label="State 123\n\l 61 ifstmt: IF \"(\" expression \")\" body .\l"]
  123 -> "123R61" [style=solid]
 "123R61" [label="R61", fillcolor=3, shape=diamond, style=filled]
  124 [label="State 124\n\l 36 statement: READ \"(\" ID \")\" \";\" .\l"]
  124 -> "124R36" [style=solid]
 "124R36" [label="R36", fillcolor=3, shape=diamond, style=filled]
  125 [label="State 125\n\l 37 statement: WRITE \"(\" expression \")\" \";\" .\l"]
  125 -> "125R37" [style=solid]
 "125R37" [label="R37", fillcolor=3, shape=diamond, style=filled]
  126 [label="State 126\n\l 35 statement: ID \"(\" call_param \")\" \";\" .\l"]
  126 -> "126R35" [style=solid]
 "126R35" [label="R35", fillcolor=3, shape=diamond, style=filled]
  127 [label="State 127\n\l 66 call_param: expression \",\" call_param .\l"]
  127 -> "127R66" [style=solid]
 "127R66" [label="R66", fillcolor=3, shape=diamond, style=filled]
  128 [label="State 128\n\l 58 assign: ID \"[\" expression \"]\" ASSIGNMENT . expression\l"]
  128 -> 66 [style=solid label="ID"]
  128 -> 67 [style=solid label="INTEGER"]
  128 -> 139 [style=dashed label="expression"]
  129 [label="State 129\n\l 68 accessfield: ID \".\" accessfield .\l"]
  129 -> "129R68" [style=solid]
 "129R68" [label="R68", fillcolor=3, shape=diamond, style=filled]
  130 [label="State 130\n\l 55 struct_fields: declare \",\" . struct_fields\l"]
  130 -> 33 [style=solid label="NUMBERDECLARE"]
  130 -> 34 [style=solid label="STRINGDECLARE"]
  130 -> 35 [style=solid label="CONSTDECLARE"]
  130 -> 36 [style=solid label="BOOLEENDECLARE"]
  130 -> 38 [style=solid label="STRUCTDECLARE"]
  130 -> 39 [style=solid label="TABLEDECLARE"]
  130 -> 40 [style=solid label="POINTERDECLARE"]
  130 -> 46 [style=dashed label="type_declare"]
  130 -> 47 [style=dashed label="just_declare"]
  130 -> 48 [style=dashed label="init_declare"]
  130 -> 113 [style=dashed label="declare"]
  130 -> 140 [style=dashed label="struct_fields"]
  130 -> "130R56" [style=solid]
 "130R56" [label="R56", fillcolor=3, shape=diamond, style=filled]
  131 [label="State 131\n\l 24 statement: STRUCTTYPEDECLARE ID \"{\" struct_fields \"}\" . \";\"\l"]
  131 -> 141 [style=solid label="\";\""]
  132 [label="State 132\n\l 64 elsestmt: ELSE \"(\" \")\" body .\l"]
  132 -> "132R64" [style=solid]
 "132R64" [label="R64", fillcolor=3, shape=diamond, style=filled]
  133 [label="State 133\n\l 62 elifstmt: ELSE \"(\" expression \")\" . body\l"]
  133 -> 25 [style=solid label="\"{\""]
  133 -> 142 [style=dashed label="body"]
  134 [label="State 134\n\l 63 elifstmt: elifstmt ELSE \"(\" expression . \")\" body\l"]
  134 -> 143 [style=solid label="\")\""]
  135 [label="State 135\n\l 28 statement: LOOP \"(\" init_declare \";\" expression \";\" . assign \")\" \"{\" loop_bloc \"}\"\l"]
  135 -> 144 [style=solid label="ID"]
  135 -> 41 [style=solid label="\"&\""]
  135 -> 42 [style=solid label="\"@\""]
  135 -> 145 [style=dashed label="assign"]
  135 -> 52 [style=dashed label="var"]
  136 [label="State 136\n\l 27 statement: LOOP \"(\" assign \";\" expression \";\" . assign \")\" \"{\" loop_bloc \"}\"\l"]
  136 -> 144 [style=solid label="ID"]
  136 -> 41 [style=solid label="\"&\""]
  136 -> 42 [style=solid label="\"@\""]
  136 -> 146 [style=dashed label="assign"]
  136 -> 52 [style=dashed label="var"]
  137 [label="State 137\n\l 38 loop_bloc: statement . loop_bloc\l"]
  137 -> 28 [style=solid label="LOOP"]
  137 -> 29 [style=solid label="IF"]
  137 -> 30 [style=solid label="READ"]
  137 -> 31 [style=solid label="WRITE"]
  137 -> 32 [style=solid label="ID"]
  137 -> 33 [style=solid label="NUMBERDECLARE"]
  137 -> 34 [style=solid label="STRINGDECLARE"]
  137 -> 35 [style=solid label="CONSTDECLARE"]
  137 -> 36 [style=solid label="BOOLEENDECLARE"]
  137 -> 37 [style=solid label="STRUCTTYPEDECLARE"]
  137 -> 38 [style=solid label="STRUCTDECLARE"]
  137 -> 39 [style=solid label="TABLEDECLARE"]
  137 -> 40 [style=solid label="POINTERDECLARE"]
  137 -> 41 [style=solid label="\"&\""]
  137 -> 42 [style=solid label="\"@\""]
  137 -> 43 [style=solid label="RETURN"]
  137 -> 137 [style=dashed label="statement"]
  137 -> 147 [style=dashed label="loop_bloc"]
  137 -> 46 [style=dashed label="type_declare"]
  137 -> 47 [style=dashed label="just_declare"]
  137 -> 48 [style=dashed label="init_declare"]
  137 -> 49 [style=dashed label="declare"]
  137 -> 50 [style=dashed label="assign"]
  137 -> 51 [style=dashed label="ifstmt"]
  137 -> 52 [style=dashed label="var"]
  137 -> "137R41" [style=solid]
 "137R41" [label="R41", fillcolor=3, shape=diamond, style=filled]
  138 [label="State 138\n\l 26 statement: LOOP \"(\" expression \")\" \"{\" loop_bloc . \"}\"\l 39 loop_bloc: loop_bloc . BREAK \";\" loop_bloc\l 40          | loop_bloc . CONTINUE \";\" loop_bloc\l"]
  138 -> 148 [style=solid label="BREAK"]
  138 -> 149 [style=solid label="CONTINUE"]
  138 -> 150 [style=solid label="\"}\""]
  139 [label="State 139\n\l 58 assign: ID \"[\" expression \"]\" ASSIGNMENT expression .\l"]
  139 -> "139R58" [style=solid]
 "139R58" [label="R58", fillcolor=3, shape=diamond, style=filled]
  140 [label="State 140\n\l 55 struct_fields: declare \",\" struct_fields .\l"]
  140 -> "140R55" [style=solid]
 "140R55" [label="R55", fillcolor=3, shape=diamond, style=filled]
  141 [label="State 141\n\l 24 statement: STRUCTTYPEDECLARE ID \"{\" struct_fields \"}\" \";\" .\l"]
  141 -> "141R24" [style=solid]
 "141R24" [label="R24", fillcolor=3, shape=diamond, style=filled]
  142 [label="State 142\n\l 62 elifstmt: ELSE \"(\" expression \")\" body .\l"]
  142 -> "142R62" [style=solid]
 "142R62" [label="R62", fillcolor=3, shape=diamond, style=filled]
  143 [label="State 143\n\l 63 elifstmt: elifstmt ELSE \"(\" expression \")\" . body\l"]
  143 -> 25 [style=solid label="\"{\""]
  143 -> 151 [style=dashed label="body"]
  144 [label="State 144\n\l 58 assign: ID . \"[\" expression \"]\" ASSIGNMENT expression\l 69 var: ID .\l 70    | ID . \".\" accessfield\l"]
  144 -> 58 [style=solid label="\"[\""]
  144 -> 59 [style=solid label="\".\""]
  144 -> "144R69" [style=solid]
 "144R69" [label="R69", fillcolor=3, shape=diamond, style=filled]
  145 [label="State 145\n\l 28 statement: LOOP \"(\" init_declare \";\" expression \";\" assign . \")\" \"{\" loop_bloc \"}\"\l"]
  145 -> 152 [style=solid label="\")\""]
  146 [label="State 146\n\l 27 statement: LOOP \"(\" assign \";\" expression \";\" assign . \")\" \"{\" loop_bloc \"}\"\l"]
  146 -> 153 [style=solid label="\")\""]
  147 [label="State 147\n\l 38 loop_bloc: statement loop_bloc .\l 39          | loop_bloc . BREAK \";\" loop_bloc\l 40          | loop_bloc . CONTINUE \";\" loop_bloc\l"]
  147 -> 148 [style=solid label="BREAK"]
  147 -> 149 [style=solid label="CONTINUE"]
  147 -> "147R38d" [label="[BREAK, CONTINUE]", style=solid]
 "147R38d" [label="R38", fillcolor=5, shape=diamond, style=filled]
  147 -> "147R38" [style=solid]
 "147R38" [label="R38", fillcolor=3, shape=diamond, style=filled]
  148 [label="State 148\n\l 39 loop_bloc: loop_bloc BREAK . \";\" loop_bloc\l"]
  148 -> 154 [style=solid label="\";\""]
  149 [label="State 149\n\l 40 loop_bloc: loop_bloc CONTINUE . \";\" loop_bloc\l"]
  149 -> 155 [style=solid label="\";\""]
  150 [label="State 150\n\l 26 statement: LOOP \"(\" expression \")\" \"{\" loop_bloc \"}\" .\l"]
  150 -> "150R26" [style=solid]
 "150R26" [label="R26", fillcolor=3, shape=diamond, style=filled]
  151 [label="State 151\n\l 63 elifstmt: elifstmt ELSE \"(\" expression \")\" body .\l"]
  151 -> "151R63" [style=solid]
 "151R63" [label="R63", fillcolor=3, shape=diamond, style=filled]
  152 [label="State 152\n\l 28 statement: LOOP \"(\" init_declare \";\" expression \";\" assign \")\" . \"{\" loop_bloc \"}\"\l"]
  152 -> 156 [style=solid label="\"{\""]
  153 [label="State 153\n\l 27 statement: LOOP \"(\" assign \";\" expression \";\" assign \")\" . \"{\" loop_bloc \"}\"\l"]
  153 -> 157 [style=solid label="\"{\""]
  154 [label="State 154\n\l 39 loop_bloc: loop_bloc BREAK \";\" . loop_bloc\l"]
  154 -> 28 [style=solid label="LOOP"]
  154 -> 29 [style=solid label="IF"]
  154 -> 30 [style=solid label="READ"]
  154 -> 31 [style=solid label="WRITE"]
  154 -> 32 [style=solid label="ID"]
  154 -> 33 [style=solid label="NUMBERDECLARE"]
  154 -> 34 [style=solid label="STRINGDECLARE"]
  154 -> 35 [style=solid label="CONSTDECLARE"]
  154 -> 36 [style=solid label="BOOLEENDECLARE"]
  154 -> 37 [style=solid label="STRUCTTYPEDECLARE"]
  154 -> 38 [style=solid label="STRUCTDECLARE"]
  154 -> 39 [style=solid label="TABLEDECLARE"]
  154 -> 40 [style=solid label="POINTERDECLARE"]
  154 -> 41 [style=solid label="\"&\""]
  154 -> 42 [style=solid label="\"@\""]
  154 -> 43 [style=solid label="RETURN"]
  154 -> 137 [style=dashed label="statement"]
  154 -> 158 [style=dashed label="loop_bloc"]
  154 -> 46 [style=dashed label="type_declare"]
  154 -> 47 [style=dashed label="just_declare"]
  154 -> 48 [style=dashed label="init_declare"]
  154 -> 49 [style=dashed label="declare"]
  154 -> 50 [style=dashed label="assign"]
  154 -> 51 [style=dashed label="ifstmt"]
  154 -> 52 [style=dashed label="var"]
  154 -> "154R41" [style=solid]
 "154R41" [label="R41", fillcolor=3, shape=diamond, style=filled]
  155 [label="State 155\n\l 40 loop_bloc: loop_bloc CONTINUE \";\" . loop_bloc\l"]
  155 -> 28 [style=solid label="LOOP"]
  155 -> 29 [style=solid label="IF"]
  155 -> 30 [style=solid label="READ"]
  155 -> 31 [style=solid label="WRITE"]
  155 -> 32 [style=solid label="ID"]
  155 -> 33 [style=solid label="NUMBERDECLARE"]
  155 -> 34 [style=solid label="STRINGDECLARE"]
  155 -> 35 [style=solid label="CONSTDECLARE"]
  155 -> 36 [style=solid label="BOOLEENDECLARE"]
  155 -> 37 [style=solid label="STRUCTTYPEDECLARE"]
  155 -> 38 [style=solid label="STRUCTDECLARE"]
  155 -> 39 [style=solid label="TABLEDECLARE"]
  155 -> 40 [style=solid label="POINTERDECLARE"]
  155 -> 41 [style=solid label="\"&\""]
  155 -> 42 [style=solid label="\"@\""]
  155 -> 43 [style=solid label="RETURN"]
  155 -> 137 [style=dashed label="statement"]
  155 -> 159 [style=dashed label="loop_bloc"]
  155 -> 46 [style=dashed label="type_declare"]
  155 -> 47 [style=dashed label="just_declare"]
  155 -> 48 [style=dashed label="init_declare"]
  155 -> 49 [style=dashed label="declare"]
  155 -> 50 [style=dashed label="assign"]
  155 -> 51 [style=dashed label="ifstmt"]
  155 -> 52 [style=dashed label="var"]
  155 -> "155R41" [style=solid]
 "155R41" [label="R41", fillcolor=3, shape=diamond, style=filled]
  156 [label="State 156\n\l 28 statement: LOOP \"(\" init_declare \";\" expression \";\" assign \")\" \"{\" . loop_bloc \"}\"\l"]
  156 -> 28 [style=solid label="LOOP"]
  156 -> 29 [style=solid label="IF"]
  156 -> 30 [style=solid label="READ"]
  156 -> 31 [style=solid label="WRITE"]
  156 -> 32 [style=solid label="ID"]
  156 -> 33 [style=solid label="NUMBERDECLARE"]
  156 -> 34 [style=solid label="STRINGDECLARE"]
  156 -> 35 [style=solid label="CONSTDECLARE"]
  156 -> 36 [style=solid label="BOOLEENDECLARE"]
  156 -> 37 [style=solid label="STRUCTTYPEDECLARE"]
  156 -> 38 [style=solid label="STRUCTDECLARE"]
  156 -> 39 [style=solid label="TABLEDECLARE"]
  156 -> 40 [style=solid label="POINTERDECLARE"]
  156 -> 41 [style=solid label="\"&\""]
  156 -> 42 [style=solid label="\"@\""]
  156 -> 43 [style=solid label="RETURN"]
  156 -> 137 [style=dashed label="statement"]
  156 -> 160 [style=dashed label="loop_bloc"]
  156 -> 46 [style=dashed label="type_declare"]
  156 -> 47 [style=dashed label="just_declare"]
  156 -> 48 [style=dashed label="init_declare"]
  156 -> 49 [style=dashed label="declare"]
  156 -> 50 [style=dashed label="assign"]
  156 -> 51 [style=dashed label="ifstmt"]
  156 -> 52 [style=dashed label="var"]
  156 -> "156R41" [style=solid]
 "156R41" [label="R41", fillcolor=3, shape=diamond, style=filled]
  157 [label="State 157\n\l 27 statement: LOOP \"(\" assign \";\" expression \";\" assign \")\" \"{\" . loop_bloc \"}\"\l"]
  157 -> 28 [style=solid label="LOOP"]
  157 -> 29 [style=solid label="IF"]
  157 -> 30 [style=solid label="READ"]
  157 -> 31 [style=solid label="WRITE"]
  157 -> 32 [style=solid label="ID"]
  157 -> 33 [style=solid label="NUMBERDECLARE"]
  157 -> 34 [style=solid label="STRINGDECLARE"]
  157 -> 35 [style=solid label="CONSTDECLARE"]
  157 -> 36 [style=solid label="BOOLEENDECLARE"]
  157 -> 37 [style=solid label="STRUCTTYPEDECLARE"]
  157 -> 38 [style=solid label="STRUCTDECLARE"]
  157 -> 39 [style=solid label="TABLEDECLARE"]
  157 -> 40 [style=solid label="POINTERDECLARE"]
  157 -> 41 [style=solid label="\"&\""]
  157 -> 42 [style=solid label="\"@\""]
  157 -> 43 [style=solid label="RETURN"]
  157 -> 137 [style=dashed label="statement"]
  157 -> 161 [style=dashed label="loop_bloc"]
  157 -> 46 [style=dashed label="type_declare"]
  157 -> 47 [style=dashed label="just_declare"]
  157 -> 48 [style=dashed label="init_declare"]
  157 -> 49 [style=dashed label="declare"]
  157 -> 50 [style=dashed label="assign"]
  157 -> 51 [style=dashed label="ifstmt"]
  157 -> 52 [style=dashed label="var"]
  157 -> "157R41" [style=solid]
 "157R41" [label="R41", fillcolor=3, shape=diamond, style=filled]
  158 [label="State 158\n\l 39 loop_bloc: loop_bloc . BREAK \";\" loop_bloc\l 39          | loop_bloc BREAK \";\" loop_bloc .\l 40          | loop_bloc . CONTINUE \";\" loop_bloc\l"]
  158 -> 148 [style=solid label="BREAK"]
  158 -> 149 [style=solid label="CONTINUE"]
  158 -> "158R39d" [label="[BREAK, CONTINUE]", style=solid]
 "158R39d" [label="R39", fillcolor=5, shape=diamond, style=filled]
  158 -> "158R39" [style=solid]
 "158R39" [label="R39", fillcolor=3, shape=diamond, style=filled]
  159 [label="State 159\n\l 39 loop_bloc: loop_bloc . BREAK \";\" loop_bloc\l 40          | loop_bloc . CONTINUE \";\" loop_bloc\l 40          | loop_bloc CONTINUE \";\" loop_bloc .\l"]
  159 -> 148 [style=solid label="BREAK"]
  159 -> 149 [style=solid label="CONTINUE"]
  159 -> "159R40d" [label="[BREAK, CONTINUE]", style=solid]
 "159R40d" [label="R40", fillcolor=5, shape=diamond, style=filled]
  159 -> "159R40" [style=solid]
 "159R40" [label="R40", fillcolor=3, shape=diamond, style=filled]
  160 [label="State 160\n\l 28 statement: LOOP \"(\" init_declare \";\" expression \";\" assign \")\" \"{\" loop_bloc . \"}\"\l 39 loop_bloc: loop_bloc . BREAK \";\" loop_bloc\l 40          | loop_bloc . CONTINUE \";\" loop_bloc\l"]
  160 -> 148 [style=solid label="BREAK"]
  160 -> 149 [style=solid label="CONTINUE"]
  160 -> 162 [style=solid label="\"}\""]
  161 [label="State 161\n\l 27 statement: LOOP \"(\" assign \";\" expression \";\" assign \")\" \"{\" loop_bloc . \"}\"\l 39 loop_bloc: loop_bloc . BREAK \";\" loop_bloc\l 40          | loop_bloc . CONTINUE \";\" loop_bloc\l"]
  161 -> 148 [style=solid label="BREAK"]
  161 -> 149 [style=solid label="CONTINUE"]
  161 -> 163 [style=solid label="\"}\""]
  162 [label="State 162\n\l 28 statement: LOOP \"(\" init_declare \";\" expression \";\" assign \")\" \"{\" loop_bloc \"}\" .\l"]
  162 -> "162R28" [style=solid]
 "162R28" [label="R28", fillcolor=3, shape=diamond, style=filled]
  163 [label="State 163\n\l 27 statement: LOOP \"(\" assign \";\" expression \";\" assign \")\" \"{\" loop_bloc \"}\" .\l"]
  163 -> "163R27" [style=solid]
 "163R27" [label="R27", fillcolor=3, shape=diamond, style=filled]
}
